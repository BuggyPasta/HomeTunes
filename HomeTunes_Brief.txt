HomeTunes - Music Player Application

Description:
HomeTunes is a web-based music player application designed to play MP3 files from a local network. The application should be accessible from any device (PC, mobile phone, or tablet) within the same Local Area Network (LAN). It is intended for personal use by 1-2 trusted users within the same household, not for public or multi-user environments.

Key Requirements:

1. Platform Compatibility:
   - Must work on any PC browser in any operating system
   - Must work on any mobile phone or tablet within LAN
   - Must be accessible through a web browser

2. Audio Support:
   - Support for MP3 files only, no other type of music file
   - Basic playback controls:
     * Control Row 1:
       - Previous button
       - Rewind 10 seconds button
       - Play/Pause button
       - Forward 10 seconds button
       - Next button
     * Control Row 2:
       - Back button
       - Shuffle button
       - Download button
       - Home button
   - Playlist functionality is not required

3. User Interface:
   - Dark mode only
   - Responsive design for all devices
   - Simple and intuitive interface
   - No visualization required
   - Header Layout:
     * Top-left: HomeTunes logo
     * Top-right: Search bar for MP3 files
     * Clean, minimal design suitable for personal use

4. Network Requirements:
   - Must work within a Local Area Network (LAN)
   - No internet connection required
   - Must be able to access MP3 files from a host-mounted directory at /music (read-only)

5. Performance:
   - Fast loading times
   - Efficient memory usage
   - Smooth playback without lag

6. Security:
   - Basic authentication for network access
   - Secure file access within LAN

7. Additional Features:
   - Search functionality for MP3 files
   - Basic file information display (title, artist, duration)
   - No visualization required

Technical Constraints:
- Must be a web-based application
- Must work with any modern web browser
- Must support MP3 file format only
- Must be accessible within LAN
- Must be responsive and work on all devices
- No visualization required

Framework Requirements:
- Use vanilla HTML, CSS, and JavaScript only
- NO frameworks (React, Vue, Angular, etc.) should be used
- NO build tools or bundlers required
- Keep it simple and lightweight
- Use HTML5 Audio API for playback
- Use CSS for styling and responsiveness
- Use vanilla JavaScript for functionality

Folder Structure:
```
/app/  # Container root after GitHub clone
├── index.html          # Main HTML file
├── styles/
│   └── dark.css       # Dark mode styles
├── js/
│   ├── player_mp3.js  # MP3 player functionality
│   ├── player_radio.js # Radio player functionality
│   ├── search.js      # Unified search functionality
│   ├── state_manager.js # State management
│   └── metadata_handler.js # Metadata handling
└── icons/             # Icons from GitHub
    • back.svg
    • download.svg
    • forward10.svg
    • home.svg
    • mp3.svg
    • next.svg
    • pause.svg
    • play.svg
    • previous.svg
    • radio.svg
    • shuffle.svg
    • rewind10.svg
    • song.svg
```

Component Interactions:
1. State Management (state_manager.js):
   - Central hub for application state
   - Manages transitions between MP3 and radio modes
   - Handles persistence of:
     * Last played MP3 position
     * Last played radio station
     * Current mode (MP3/Radio)
     * Play/pause state
   - Coordinates cleanup when switching modes
   - Notifies other components of state changes

2. Search System (search.js):
   - Unified search interface
   - Communicates with state_manager for mode awareness
   - Handles both MP3 and radio station searches
   - Updates UI with search results
   - Triggers appropriate player based on result type
   - Maintains search history

3. MP3 Player (player_mp3.js):
   - Handles MP3 file playback
   - Communicates with state_manager for state persistence
   - Manages MP3-specific controls
   - Handles file system operations
   - Coordinates with metadata_handler for file info
   - Cleans up when switching to radio mode

4. Radio Player (player_radio.js):
   - Manages radio stream playback
   - Communicates with state_manager for state persistence
   - Handles radio-specific controls
   - Manages stream quality adaptation
   - Coordinates with metadata_handler for stream info
   - Cleans up when switching to MP3 mode

5. Metadata Handler (metadata_handler.js):
   - Processes MP3 file information
   - Handles radio stream metadata
   - Updates UI with current track/station info
   - Manages metadata caching
   - Provides fallback information when metadata is unavailable

JavaScript File Specifications:

1. player_mp3.js:
   - MP3 File Handling:
     * Parse MP3 filenames (Artist - Title.mp3)
     * Handle file system operations
     * Manage file loading and unloading
   - Playback Controls:
     * Play/Pause functionality
     * Previous/Next track navigation
     * Rewind/Forward 10 seconds
     * Shuffle play within current root subfolder
   - State Management:
     * Track position persistence
     * Play/pause state
     * Current folder tracking
   - Error Handling:
     * Corrupted file detection
     * Playback error recovery
     * Fallback to song.svg for missing art

2. player_radio.js:
   - Stream Management:
     * Handle radio stream connections
     * Manage stream quality adaptation
     * Handle stream buffering
   - Playback Controls:
     * Play/Pause functionality
     * Station switching
     * Stream error recovery
   - State Management:
     * Current station tracking
     * Play/pause state
     * Stream quality state
   - Error Handling:
     * Connection loss recovery
     * Stream error detection
     * Auto-reconnect logic

3. search.js:
   - Search Implementation:
     * Real-time search as you type
     * Debounced search (150ms)
     * Case-insensitive matching
   - Result Handling:
     * MP3 file search in mounted share
     * Radio station name search
     * Result type identification
     * Result limit enforcement (100)
   - UI Updates:
     * Search result display
     * Type indicators (MP3/Radio)
     * Clear button management
   - Interaction:
     * Click handling for results
     * Mode switching on selection
     * Search history management

4. state_manager.js:
   - State Management:
     * Current mode tracking (MP3/Radio)
     * Playback state persistence
     * Last played position
     * Last played station
   - Mode Transitions:
     * MP3 to Radio switching
     * Radio to MP3 switching
     * Cleanup coordination
   - Persistence:
     * localStorage management
     * State restoration
     * Error recovery
   - Event Coordination:
     * Component communication
     * State change notifications
     * Error state propagation

5. metadata_handler.js:
   - MP3 Metadata:
     * Filename parsing
     * Artist/Title extraction
     * Duration calculation
   - Radio Metadata:
     * Stream metadata parsing
     * Station info management
     * Fallback handling
   - UI Updates:
     * Current track display
     * Station info display
     * Metadata refresh
   - Caching:
     * Metadata storage
     * Cache invalidation
     * Fallback information

Interaction Flow:
1. Mode Switching:
   - User selects MP3/Radio mode
   - state_manager coordinates the transition
   - Current player cleans up
   - New player initializes
   - UI updates accordingly

2. Search Flow:
   - User enters search term
   - search.js queries both MP3 and radio data
   - Results displayed with type indicators
   - User selects result
   - state_manager switches to appropriate mode
   - Corresponding player handles playback

3. Playback Control:
   - User interacts with controls
   - Current player handles the action
   - state_manager updates persistent state
   - metadata_handler updates display info
   - UI reflects changes

4. Error Handling:
   - Players detect errors
   - state_manager notified of issues
   - Appropriate error UI displayed
   - Recovery mechanisms activated
   - State restored if possible

Note: This application should be kept simple and efficient. Overengineering with frameworks, build tools, or complex architectures is explicitly prohibited. The focus should be on a lightweight, fast-loading application that works reliably within a LAN environment.

HomeTunes Technical Brief

1. Core Requirements Summary
A. Source Code & Assets
    • GitHub Repository:
        ◦ URL: https://github.com/BuggyPasta/HomeTunes
        ◦ Branch: main (default)
        ◦ Critical Paths:
            ▪ All icons: /icons/ (SVG files)
        ◦ No Local Files: The container must pull everything from this repo.
    • Music Files:
        ◦ Must be provided by the host and mounted as a read-only volume at /music

B. Deployment Rules
    1. Dockge Compatibility:
        ◦ Single docker-compose.yml in repo root.
        ◦ All build contexts reference GitHub raw URLs (no local clones).
        ◦ Music files must be mounted from the host at /music (read-only)

2. Detailed Specifications
A. Deployment & Infrastructure
    1. Docker Requirements:
        ◦ Bind-mounted volumes:
            ▪ /home/user/docker_backup/hometunes:/data (configs/radio stations)
            ▪ /path/to/your/host/music:/music:ro (read-only music files)
        ◦ No host-side actions: Permissions/automount handled by Docker volume mounts

B. UI/UX Rules
    1. Home Screen
        ◦ Buttons:
            ▪ mp3.svg (left) and radio.svg (right)
            ▪ Centered, responsive stacking (mobile: vertical)
        ◦ Footer:
            ▪ Text: "Created by BuggyPasta | GitHub"
            ▪ Links:
                - "BuggyPasta" → https://github.com/BuggyPasta (new tab)
                - "GitHub" → https://github.com/BuggyPasta/HomeTunes (new tab)
            ▪ Style:
                - No hover/click effects

    2. Color Scheme
        ◦ Success States:
            ▪ Background: #009900 (green)
            ▪ Hover: #017D07 (darker green)
        ◦ Error States:
            ▪ Background: #bb0000 (red)
            ▪ Hover: #900 (darker red)

    3. MP3 Player Screen
        ◦ Hierarchy:
            1. folder.jpg (or song.svg fallback)
            2. Artist (line 1) + SongTitle (line 2) - marquee scroll if overflow
            3. Control Row 1:
                - previous.svg | rewind10.svg | play.svg/pause.svg | forward10.svg | next.svg
            4. Control Row 2:
                - back.svg | shuffle.svg | download.svg | home.svg
        ◦ Behavior:
            1. Auto-advance: Alphabetical → next folder on end-of-list
            2. Shuffle button: Constrained to current root subfolder
            3. Remember last played position when paused
            4. Remember last played position across app/browser closures, even with cache cleared
            5. Download preserves original filename
            6. Skip corrupted/unplayable files automatically
            7. Fall back to song.svg if folder.jpg/png is corrupted
            8. Mini-player is NOT shown on this screen (only shown when navigating away from player)

    4. Radio Screen
        ◦ Station List:
            ▪ Vertical buttons (equal width) - names from radio_stations.json
            ▪ "Edit Stations" button (different color) → confirmation modals for delete
        ◦ Station Management:
            ▪ Drag-and-drop reordering
            ▪ Required fields: name and URL only
            ▪ URL validation:
                - Valid URL format
                - http/https protocol
                - Basic connectivity test (HEAD request)
            ▪ Success modal for reachable streams
            ▪ Maximum stations: 100
            ▪ Remember last played station
        ◦ Radio Player Controls:
            ▪ Basic Controls:
                - Play/Pause button
                - Back button (to return to station list)
                - Home button (to return to main menu)
            ▪ Display Elements:
                - Station name
                - Stream status (Playing/Buffering/Error)
                - Buffering indicator when needed
            ▪ Error Handling:
                - Visual indicator for stream errors
                - Auto-retry mechanism
                - Manual retry button
                - Clear error messages
            ▪ State Management:
                - Remember last played station
                - Remember if stream was playing/paused
            ▪ Transition Handling:
                - Clear behavior when switching between MP3 and radio modes
                - Proper cleanup of previous audio source
                - Smooth transition between modes
            ▪ Stream Quality:
                - Automatically select best available stream quality
                - Automatically drop to lower quality on slower connections
                - No manual quality selection needed
            ▪ Metadata Handling:
                - Display stream metadata if available
                - Fallback to station name if no metadata
                - Update display when metadata changes
            ▪ Network Handling:
                - Auto-reconnect on network issues
                - Buffer management during poor connection
                - Clear status indicators
        ◦ Important: Volume control is explicitly NOT included in the radio player

    5. Folder View
        ◦ Layout:
            ▪ Left-aligned (only in folder view, other screens remain centered)
            ▪ Artist name: Normal size, left-aligned
            ▪ Song title: Smaller size (0.85 ratio), left-aligned, indented
            ▪ Solid line separator between songs
            ▪ Spacing:
                - More space after title (before separator)
                - Less space after separator (before next artist)
        ◦ Text Handling:
            ▪ Long text truncated with ellipsis
            ▪ Tap to expand and show full text in modal/popup
            ▪ Tap again to close expanded view
        ◦ Folder Structure:
            ▪ Hide empty folders (no MP3 files)
            ▪ Show folders that contain MP3 files in subfolders
            ▪ Breadcrumb navigation:
                - Collapsible on mobile
                - Show only last 3 levels when collapsed
                - Expand to show full path on tap

C. Functional Logic
    1. File Handling:
        ◦ MP3 parsing: Artist - Title.mp3 filename convention (ignore ID3)
        ◦ Folder hierarchy: Mirror SHARE exactly
        ◦ Support MP3 files only (no FLAC)
        ◦ MP3 Format Support:
            - No minimum/maximum bitrate requirements
            - Support for both VBR and CBR
            - No specific sample rate requirements
        ◦ Filename Support:
            - Support for English, Italian, and Greek characters
            - Support for all capital letters
            - No maximum filename length
            - No maximum folder depth
        ◦ Search functionality:
            - Real-time search as you type
            - Search all folders for MP3 files
            - Search radio station names
            - Search both artist and title for MP3s
            - Case-insensitive
            - Search within filenames (no ID3 tags)
            - Show results as you type
            - Results clickable to play immediately
            - No filters needed (always search all folders)
            - Search UI:
                - Full-width search bar at top of folder structure
                - No search button required
                - Clear button (X) appears when text is entered
            - Search Results:
                - Show only artist and title for MP3s
                - Show station name for radio stations
                - Visual indicator to distinguish between MP3 and radio results
                - Click to play immediately
                - No path information displayed
                - Limit to 100 results
                - Show "More results available" message if more exist
            - Post-Search Playback:
                - After searched song ends, continue with alphabetical playback
                - Play next song in the same folder as the searched song
                - If last song in folder, move to next folder alphabetically
                - Maintains same auto-advance behavior as regular playback
                - For radio stations, switch to radio mode and play selected station

    2. Playback:
        ◦ Resume from paused position
        ◦ Download button: Forces Content-Disposition: attachment header
        ◦ Shuffle play:
            - Remember played songs in localStorage
            - Maximum 1000 entries
            - Remove oldest entries when limit reached
            - Remove entries older than 30 days
            - Run cleanup on app start
            - Persist across refreshes
            - Avoid repeats until all songs played
            - Constrained to current root subfolder

    3. Navigation:
        ◦ Breadcrumb navigation:
            - Compact design for mobile
            - Horizontally scrollable if needed
            - Show full path
            - Collapsible on mobile
            - Show only last 3 levels when collapsed
            - Expand to show full path on tap
        ◦ Folder structure caching:
            - Cache on first load
            - 5-minute refresh interval
            - Silent updates
            - Check SHARE last modified time
            - Update only changed folders
            - Manual refresh options:
                - Pull-to-refresh gesture in folder view
                - Small refresh icon in folder view header
                - "Last updated: X minutes ago" indicator (tappable)

    4. Virtual Scrolling:
        ◦ Implement when folder contains >100 items
        ◦ Loading indicator:
            - Thin bar (2-3px)
            - Primary color (#42A5F5) at 50% opacity
            - Left-to-right animation
            - Auto-hide on completion

    5. Error States:
        ◦ SHARE unreachable → Show "Cannot access NAS"
        ◦ Missing icons → Fallback to text
        ◦ Network disconnection:
            - Show "Cannot access NAS" message
            - Pause playback
            - Auto-resume when connection restored ONLY if browser page is still open
            - If browser page was closed during disconnection, do NOT auto-resume when reopened
        ◦ Failed downloads:
            - Show error message
            - Allow retry
        ◦ Corrupted MP3 files:
            - Skip automatically
            - No retry mechanism
            - No user notification
            - Log to console only (temporary, not persisted)
            - No persistent storage of error information
        ◦ Invalid radio streams:
            - Show error in station list
            - Allow retry
            - Option to remove station

    6. Radio Station Management:
        ◦ Maximum stations: 100
        ◦ Order persists in localStorage
        ◦ No categorization needed
        ◦ URL validation:
            - Valid URL format
            - http/https protocol
            - Basic connectivity test (HEAD request)
            - 5-second timeout for validation
            - Show loading indicator during validation
        ◦ Success modal for reachable streams
        ◦ Remember last played station

    7. Mini-Player:
        ◦ Always visible (not dismissible)
        ◦ Dimensions:
            - Height: 60px (fixed)
            - Full width of screen
            - No border radius (square edges)
        ◦ Visual Style:
            - Background: Semi-transparent dark background (rgba(0, 0, 45, 0.95))
            - Text: White for artist, slightly dimmed for title
            - Progress bar: Primary color (#42A5F5)
            - Progress bar thickness: 2px
            - Subtle top border in primary color (1px)
        ◦ Progress Bar:
            - Interactive (clickable to seek)
            - Smooth updates
            - Visual feedback on hover/touch
        ◦ Animations:
            - Smooth fade transition when changing songs (300ms)
            - Progress bar updates smoothly
            - No slide or bounce animations
            - Subtle hover effect on expand button
        ◦ Controls: play/pause and expand only
        ◦ No additional controls needed
        ◦ Display current song's artist and title
        ◦ Take you directly back to the full MP3 player screen when expanded

D. Non-Negotiables
    • Layout:
        ◦ All elements centered (always, except folder view)
        ◦ No zoom (viewport locked)
    • Assets:
        ◦ All icons from /icons/ (see list below)
    • Mobile:
        ◦ Double-tap zoom disabled
        ◦ Touch-friendly hit targets (>48px)

E. State Management
    1. Current State (in memory):
        ◦ Current folder path
        ◦ Current song position (when paused)
        ◦ Current radio station (if playing)
    2. Persistent State (in localStorage):
        ◦ Shuffle play history
        ◦ Radio station order
        ◦ Last played position
        ◦ Last played folder path

F. Performance Requirements
    1. File System:
        ◦ Maximum MP3 files: 10,000
        ◦ Maximum folder depth: No limit
    2. Performance Benchmarks:
        ◦ Initial load: < 5 seconds (UI only, excludes SHARE mount and initial scan)
        ◦ Search response: < 100ms
        ◦ Playback start: < 1 second
        ◦ No preloading needed
    3. Browser Support:
        ◦ Support all major browsers (mobile and desktop) released after mid-2024
        ◦ No PWA capabilities required
        ◦ Responsive design for:
            - Mobile (< 768px)
            - Tablet (768px - 1024px)
            - Desktop (> 1024px)

G. Backup and Recovery
    1. Radio Stations Configuration:
        ◦ Auto-backup to /data/backup/
        ◦ Keep last 5 backups
        ◦ Auto-recovery from last known good state
        ◦ No user intervention needed
    2. Recovery Process:
        ◦ Check for corrupted configuration
        ◦ Restore from most recent backup
        ◦ Log recovery actions

3. Asset Inventory
Required Icons (/icons/):
    • back.svg
    • download.svg
    • forward10.svg
    • home.svg
    • mp3.svg
    • next.svg
    • pause.svg
    • play.svg
    • previous.svg
    • radio.svg
    • shuffle.svg
    • rewind10.svg
    • song.svg

4. Validation Checklist
Before deployment, verify:
    1. All GitHub paths correct
    2. No hover effects in CSS
    4. Marquee scroll pauses on tap

5. Security Specifications
A. Access Control
    • No Authentication:
        ◦ Zero password protection or user logins
        ◦ Justification: LAN-only use by trusted user
    • Network Isolation:
        ◦ Binding to 12777 on host interface only
        ◦ Firewall recommendation: Block port 12777 at router level

B. Data Protection
    • Read-Only Mounts:
        ◦ SHARE mounted as :ro

C. Input Sanitization
    • Radio Station URLs:
        ◦ Validate prefixes (http://, https://)
        ◦ Reject file://, javascript:, or malformed URLs
    • File Access:
        ◦ Restrict file operations to /music subdirectories

D. Session Security
    • No Cookies/LocalStorage:
        ◦ Stateless design
        ◦ No sensitive data cached in browser
    • CORS: Explicitly disable (Access-Control-Allow-Origin: null)

E. Container Hardening
    • Runtime Flags:
        ◦ --security-opt=no-new-privileges
        ◦ --read-only (except /data and /music mounts)
    • User Context:
        ◦ Run as non-root user

F. Audit Controls
    • Logging:
        ◦ Record failed SHARE mount attempts
        ◦ Log all radio station edits to /data/audit.log

6. Color Scheme
    --primary-color: #42A5F5; /* Vibrant Blue - Used for accents, titles, borders, and button text */
    --header-bg: #00002D;
    --button-bg: #2D2D44; /* Lighter Navy - General button background */
    --button-hover: #1E1E2E; /* Hover state for general buttons */
    --button-text: white;
    --error-color: #B00;
    --error-hover: #900;
    --success-color: #029D09;
    --success-hover: #017D07;
    --text-primary: var(--primary-color);
    --text-secondary: #00002d;

7. Persistent Mini-Player
    • A persistent mini-player or footer bar will be implemented to ensure continuous playback and easy access to the player when navigating away from the player page.
    • This bar will:
        ◦ Always be visible at the bottom of the screen.
        ◦ Display the current song's artist and title.
        ◦ Include a play/pause button.
        ◦ Have a small "view player" or "expand" button/icon that takes you directly back to the full MP3 player screen.

G. State Persistence & Caching
    1. Server-Side Storage:
        ◦ No server-side persistence required
        ◦ All state managed client-side via localStorage
    2. Folder Structure:
        ◦ Always scan mounted share directly
        ◦ No server-side cache of folder structure
        ◦ 5-minute client-side cache for performance only
    3. Radio Stations Backup:
        ◦ Auto-backup to /data/backup/
        ◦ Keep last 5 backups
        ◦ Auto-recovery from last known good state
        ◦ No user intervention needed

H. Enhanced Error Handling
    1. Corrupted MP3 Files:
        ◦ Skip automatically
        ◦ Log to console only
        ◦ No retry mechanism
        ◦ No user notification
    2. NAS Share Mount:
        ◦ No retry mechanism
        ◦ Show clear error message
        ◦ Manual refresh button provided
    3. Network Disconnection:
        ◦ Pause playback
        ◦ Show error message
        ◦ Auto-resume when connection restored (if page still open)
        ◦ No auto-resume if page was closed during disconnection

I. Mobile Experience
    1. Gestures:
        ◦ Swipe left/right to change songs
        ◦ Double-tap to play/pause
        ◦ Long press for additional options
    2. Mini-Player:
        ◦ Always visible (except when full player is shown)
        ◦ Fixed height and width
        ◦ No collapse functionality
        ◦ Controls: play/pause and expand only
        ◦ Shows current song info and progress

J. Performance Benchmarks
    1. Load Times:
        ◦ Initial UI load: < 5 seconds
        ◦ Search response: < 100ms
        ◦ Playback start: < 1 second
    2. Search:
        ◦ Real-time as you type
        ◦ Debounce: 150ms
        ◦ No search button needed
    3. Preloading:
        ◦ No preloading of next song
        ◦ Focus on immediate playback quality

K. Browser Support
    1. Minimum Versions:
        ◦ Chrome: 120+
        ◦ Firefox: 120+
        ◦ Safari: 17+
        ◦ Edge: 120+
    2. Fallbacks:
        ◦ Graceful degradation for older browsers
        ◦ Show compatibility warning
    3. Features:
        ◦ No PWA capabilities required
        ◦ Responsive design for all screen sizes

L. Search Functionality
    1. Implementation:
        ◦ Real-time search as you type
        ◦ Search all folders
        ◦ Search both artist and title
        ◦ Case-insensitive
        ◦ Search within filenames (no ID3 tags)
        ◦ Show results as you type
        ◦ Show full path in results
        ◦ Results clickable to play immediately
        ◦ No filters needed (always search all folders)
        ◦ Limit to 100 results
        ◦ Show "More results available" message if more exist

M. Mini-Player Specifications
    1. Visibility:
        ◦ Always visible (not dismissible)
        ◦ Fixed at bottom of screen
    2. Controls:
        ◦ Play/pause button
        ◦ Expand button to full player
    3. Display:
        ◦ Current song artist and title
        ◦ Progress bar
        ◦ Time elapsed/total
    4. Style:
        ◦ Semi-transparent dark background
        ◦ White text for artist
        ◦ Slightly dimmed text for title
        ◦ Primary color progress bar

N. UI Design System
    1. Typography:
        ◦ Primary Font: Inter
        ◦ Fallback: system-ui
    2. Border Radius:
        ◦ All elements: 5px
    3. Shadows:
        ◦ Buttons: 0 2px 4px rgba(0,0,0,0.1)
        ◦ Cards: 0 4px 6px rgba(0,0,0,0.1)
        ◦ Modals: 0 8px 16px rgba(0,0,0,0.1)
    4. Animations:
        ◦ Fade: 300ms
        ◦ Slide: 200ms
        ◦ Scale: 150ms
        ◦ Easing: cubic-bezier(0.4, 0, 0.2, 1)

G. Implementation Details

    1. State Management:
        ◦ Use Zustand's built-in persistence middleware
        ◦ Configure partial state persistence for favorites and settings
        ◦ Automatic state rehydration on app load
        ◦ Silent fallback to in-memory state if persistence fails
        ◦ Simple approach:
            - Store everything in localStorage
            - No versioning needed
            - No cleanup needed (personal use)
            - No size limits (modern browsers handle this well)

    2. Mobile Experience:
        ◦ Mini-player transitions using CSS transform and opacity
        ◦ 300ms ease-out transition for smooth appearance/disappearance
        ◦ MediaSession API fallback with basic notification controls
        ◦ Touch-optimized controls with appropriate hit areas

    3. Performance Optimizations:
        ◦ Preload retry mechanism with exponential backoff (3 retries)
        ◦ Frame rate limiting for audio visualization (30fps)
        ◦ Efficient CSS transitions using transform and opacity
        ◦ Lazy loading for non-critical components
        ◦ Debounce search input: 150ms delay
        ◦ Throttle scroll events: 100ms interval
        ◦ Lazy load images: Load when within 200px of viewport
        ◦ Cache audio metadata: Store in IndexedDB with 1-day expiration
        ◦ Batch state updates: Combine multiple changes into single render
        ◦ Basic performance monitoring:
            - Console warnings for slow operations
            - Basic performance metrics logging
            - No specific limits
            - Minimal battery impact

    4. Search Implementation:
        ◦ Loading indicator for large library searches
        ◦ Immediate feedback for user actions
        ◦ Optimized search algorithm for local data

    5. Radio Station Management:
        ◦ Smooth drag-and-drop with CSS custom properties
        ◦ 200ms cubic-bezier(0.4, 0, 0.2, 1) transitions for natural movement
        ◦ Visual feedback during drag operations
        ◦ Touch-friendly reordering interface

    6. Backup and Recovery:
        ◦ Formatted JSON output with 2-space indentation
        ◦ Human-readable backup files with clear structure
        ◦ No maximum backup file size
        ◦ Backup frequency: On browser exit
        ◦ Retention: Keep only the latest backup
        ◦ Backup structure:
          {
            "version": "1.0",
            "timestamp": "ISO-8601",
            "settings": {
              "theme": "dark",
              "volume": 0.8,
              "lastPlayed": "trackId"
            },
            "favorites": ["trackId1", "trackId2"],
            "radioStations": [
              {
                "id": "stationId",
                "name": "Station Name",
                "url": "streamUrl"
              }
            ]
          }

    7. Browser Feature Detection:
        ◦ MediaSession API availability check
        ◦ Web Audio API support verification
        ◦ Drag-and-drop capability detection
        ◦ Graceful fallbacks for unsupported features
        ◦ Console warnings for missing critical features

    8. Error Handling:
        ◦ Network errors: Retry up to 3 times with 1s, 2s, 4s delays
        ◦ File loading errors: Show user-friendly message with retry option
        ◦ Audio playback errors: Automatically skip to next track after 2 failed attempts
        ◦ Search errors: Return empty results with error message instead of crashing

Note: Playlist functionality is explicitly not required. The app should focus solely on radio station management, favorites, and basic playback controls.

H. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

H. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

I. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

J. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

K. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

L. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

M. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

N. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

O. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

P. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

Q. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

R. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

S. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

T. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

U. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

V. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

W. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

X. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

Y. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

Z. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AA. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AB. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AC. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AD. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AE. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AF. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AG. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AH. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AI. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AJ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AK. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AL. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AM. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AN. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AO. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AP. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AQ. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AR. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AS. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AT. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AU. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AV. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AW. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AX. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

AY. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

AZ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BA. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BB. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BC. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BD. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BE. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BF. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BG. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BH. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BI. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BJ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BK. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BL. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BM. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BN. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BO. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BP. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BQ. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BR. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BS. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BT. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BU. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BV. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BW. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BX. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

BY. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

BZ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CA. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CB. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CC. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CD. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CE. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CF. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CG. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CH. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CI. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CJ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CK. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CL. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CM. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CN. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CO. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CP. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CQ. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CR. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CS. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CT. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CU. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CV. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CW. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CX. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

CY. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

CZ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DA. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DB. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DC. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DD. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DE. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DF. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DG. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DH. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DI. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DJ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DK. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DL. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DM. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DN. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DO. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DP. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DQ. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DR. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DS. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DT. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DU. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DV. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DW. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DX. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

DY. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

DZ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EA. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EB. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EC. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

ED. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EE. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EF. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EG. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EH. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EI. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EJ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EK. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EL. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EM. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EN. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EO. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EP. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EQ. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

ER. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

ES. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

ET. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EU. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EV. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EW. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EX. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

EY. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

EZ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FA. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

FB. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FC. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

FD. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FE. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

FF. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FG. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

FH. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FI. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

FJ. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FK. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

FL. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FM. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

FN. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FO. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

FP. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FQ. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to/your/host/music:/music:ro
    tmpfs:
      - /tmp
      - /var/run
      - /var/lib/nginx/body
        ```

    2. Configuration Notes:
        ◦ Image Source: Built from GitHub Repository
        ◦ Watchtower Exclusion: Using standard label format
        ◦ Security: Running as non-root with read-only filesystem
        ◦ Volumes:
            - /data for persistent configuration
            - /path/to/your/host/music for read-only music access
        ◦ Port: 12777 for local access only

    3. Base Image Requirements:
        ◦ Must use Debian 12 (bookworm) as base image
        ◦ Alpine-based images are explicitly prohibited
        ◦ Justification: Host system compatibility and shared library requirements
        ◦ Required packages must be installed via apt-get
        ◦ Example base image: FROM debian:bookworm-slim

FR. Health Checks
    1. Dockge Console Status:
        ◦ Container Status:
            - Running/Stopped state
            - Uptime
            - Memory usage
            - CPU usage
        ◦ Application Status:
            - Web server running
            - SHARE mount status
            - File system access
            - Audio playback capability
        ◦ Error States:
            - SHARE connection issues
            - File system errors
            - Audio playback errors
            - Network connectivity
        ◦ Performance Metrics:
            - Response time
            - Memory usage
            - CPU usage
            - Active connections
        ◦ Troubleshooting Information:
            - Last error message
            - Error timestamp
            - Error context
            - Recovery attempts

FS. Docker Configuration
    1. docker-compose.yml Sample:
        ```yaml
services:
  hometunes:
    container_name: hometunes
    restart: unless-stopped
    build:
      context: https://github.com/BuggyPasta/HomeTunes.git
      dockerfile: Dockerfile
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - "12777:12777"
    volumes:
      - /home/user/docker_backup/hometunes:/data
      - /path/to